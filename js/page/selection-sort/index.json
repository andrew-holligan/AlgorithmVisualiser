{
    "Default": 
    {
        "description":[
            "This algorithm works similar to Insertion Sort.",
            "It iterates through each element in the array in the outer loop.",
            "The inner loop iterates from the current element to the end of the array and finds the smallest element.",
            "After the inner loop, the smallest element is swapped with the current element."
        ],
        "complexity":{
            "best-case":"O(n^2)",
            "worst-case":"O(n^2)",
            "average-case":"O(n^2)",
            "space":"O(1)"
        },
        "implementation": {
            "javascript":[
                "function selectionSort(arr) {",
                "",    
                "  let minI;",
                "  for (let i = 0; i < arr.length - 1; i++) {",
                "",
                "    minI = i;",
                "    for (let j = i + 1; j < arr.length; j++) {",
                "      if (arr[j] < arr[minI]) {",
                "        minI = j;",
                "      }",
                "    }",
                "",
                "    if (minI !== i) {",
                "      [arr[i], arr[minI]] = [arr[minI], arr[i]];",
                "    }",
                "  }",
                "",
                "}"
            ],
            "java":[
                "public void selectionSort(int[] arr) {",
                "",    
                "  int minI;",
                "  for (int i = 0; i < arr.length - 1; i++) {",
                "",
                "    minI = i;",
                "    for (int j = i + 1; j < arr.length; j++) {",
                "      if (arr[j] < arr[minI]) {",
                "        minI = j;",
                "      }",
                "    }",
                "",
                "    if (minI != i) {",
                "      int temp = arr[i];",
                "      arr[i] = arr[minI];",
                "      arr[minI] = temp;",
                "    }",
                "  }",
                "",
                "}"
            ],
            "python":[
                "def selectionSort(arr):",
                "",    
                "  for i in range(len(arr) - 1):",
                "",
                "    minI = i",
                "    for j in range(i + 1, len(arr)):",
                "      if arr[j] < arr[minI]:",
                "        minI = j",
                "",
                "    if minI != i:",
                "      arr[i], arr[minI] = arr[minI], arr[i]"
            ],
            "cpp":[
                "STILL TO IMPLEMENT"
            ],
            "csharp":[
                "STILL TO IMPLEMENT"
            ],
            "c":[
                "STILL TO IMPLEMENT"
            ]
        }
    },

    "BiDirectional": 
    {
        "description":[
            "This variant performs similar to the default.",
            "However, it iterates from both ends of the array finding both the min and the max in each inner loop."
        ],
        "complexity":{
            "best-case":"O(n^2)",
            "worst-case":"O(n^2)",
            "average-case":"O(n^2)",
            "space":"O(1)"
        },
        "implementation": {
            "javascript":[
                "function biDirectionalSelectionSort(arr) {",
                "",
                "  let i = 0;",
                "  let j = arr.length - 1;",
                "",
                "  while (i < j) {",
                "",
                "    let min = arr[i];",
                "    let max = arr[i];",
                "    let minI = i;",
                "    let maxI = i;",
                "",
                "    for (let k = i; k <= j; k++) {",
                "      if (arr[k] < min) {",
                "        min = arr[k];",
                "        minI = k;",
                "      }",
                "      if (arr[k] > max) {",
                "        max = arr[k];",
                "        maxI = k;",
                "      }",
                "    }",
                "",
                "    [arr[i], arr[minI]] = [arr[minI], arr[i]];",
                "",
                "    if (arr[minI] === max) {",
                "      [arr[j], arr[minI]] = [arr[minI], arr[j]];",
                "    } else {",
                "      [arr[j], arr[maxI]] = [arr[maxI], arr[j]];",
                "    }",
                "",
                "    i++;",
                "    j--;",
                "  }",
                "",
                "}"
            ],
            "java":[
                "public void biDirectionalSelectionSort(int[] arr) {",
                "",
                "  int i = 0;",
                "  int j = arr.length - 1;",
                "",
                "  while (i < j) {",
                "",
                "    int min = arr[i];",
                "    int max = arr[i];",
                "    int minI = i;",
                "    int maxI = i;",
                "",
                "    for (int k = i; k <= j; k++) {",
                "      if (arr[k] < min) {",
                "        min = arr[k];",
                "        minI = k;",
                "      }",
                "      if (arr[k] > max) {",
                "        max = arr[k];",
                "        maxI = k;",
                "      }",
                "    }",
                "",
                "    int temp = arr[i];",
                "    arr[i] = arr[minI];",
                "    arr[minI] = temp;",
                "",
                "    if (arr[minI] == max) {",
                "      temp = arr[j];",
                "      arr[j] = arr[minI];",
                "      arr[minI] = temp;",
                "    } else {",
                "      temp = arr[j];",
                "      arr[j] = arr[maxI];",
                "      arr[maxI] = temp;",
                "    }",
                "",
                "    i++;",
                "    j--;",
                "  }",
                "",
                "}"
            ],
            "python":[
                "def biDirectionalSelectionSort(arr):",
                "",
                "  i = 0",
                "  j = arr.length - 1",
                "",
                "  while i < j:",
                "",
                "    min = arr[i]",
                "    max = arr[i]",
                "    minI = i",
                "    maxI = i",
                "",
                "    for k in range(i, j + 1):",
                "      if arr[k] < min:",
                "        min = arr[k]",
                "        minI = k",
                "      if arr[k] > max:",
                "        max = arr[k]",
                "        maxI = k",
                "",
                "    arr[i], arr[minI] = arr[minI], arr[i]",
                "",
                "    if arr[minI] == max:",
                "      arr[j], arr[minI] = arr[minI], arr[j]",
                "    else:",
                "      arr[j], arr[maxI] = arr[maxI], arr[j]",
                "",
                "    i += 1",
                "    j -= 1"
            ],
            "cpp":[
                "STILL TO IMPLEMENT"
            ],
            "csharp":[
                "STILL TO IMPLEMENT"
            ],
            "c":[
                "STILL TO IMPLEMENT"
            ]
        }
    }
}